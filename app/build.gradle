apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '25.0.2'
    
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def project = "AnExplorer"
            def SEP = "_"
            def flavor = variant.productFlavors[0].name
            def buildType = variant.variantData.variantConfiguration.buildType.name
            def version = variant.versionName
            def date = new Date();
            def formattedDate = date.format('ddMMyy_HHmm')

            def newApkName = project + SEP + flavor + SEP + buildType + SEP + version + SEP + formattedDate + ".apk"

            output.outputFile = new File(output.outputFile.parent, newApkName)
    
    }
      }

    defaultConfig {
        versionName "3.5"
        versionCode = 55
        minSdkVersion 17
        targetSdkVersion 25
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release
    }
    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),'proguard/proguard-project.pro',
                    'proguard/proguard-google-play-services.pro'
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard/proguard-project.pro',
                    'proguard/proguard-google-play-services.pro'
        }
    }
    flavorDimensions "release", "default"
    productFlavors {
        free {
            applicationId "dev.dworks.apps.anexplorer"
            dimension "default"
        }
        pro {
            applicationId "dev.dworks.apps.anexplorer.pro"
            dimension "default"
        }
        underground {
            applicationId "dev.dworks.apps.anexplorer.underground"
            dimension "default"
        }
        google {
            dimension "release"
        }
        amazon {
            dimension "release"
        }
        other {
            dimension "release"
        }
    }
    variantFilter { variant ->
        def names = variant.flavors*.name

        if (names.contains("underground") && (names.contains("google") || names.contains("other"))) {
            variant.ignore = true
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        noCompress 'apk'
    }
}

ext {
    supportLibVersion = '25.1.0'
    gmsVersion = '10.0.1'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.jaredrummler:android-processes:+'
    compile 'com.github.mjdev:libaums:+'
    compile 'org.apache.ftpserver:ftpserver-core:+'
    compile 'commons-net:commons-net:+'
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:exifinterface:${supportLibVersion}"
    freeCompile "com.google.firebase:firebase-crash:${gmsVersion}"
    freeCompile "com.google.firebase:firebase-ads:${gmsVersion}"

    debugCompile 'com.squareup.leakcanary:leakcanary-android:+'
}

def props = new Properties()
props.load(new FileInputStream(rootProject.file("keystore.properties")))
android.signingConfigs.release.storeFile rootProject.file(props.keyStore)
android.signingConfigs.release.storePassword props.keyStorePassword
android.signingConfigs.release.keyAlias props.keyAlias
android.signingConfigs.release.keyPassword props.keyAliasPassword

if (getGradle().getStartParameter().getTaskRequests().toString().contains("Free")) {
    apply plugin: 'com.google.gms.google-services'
}
